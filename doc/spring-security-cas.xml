<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd ">	
 
	<debug/>
       
	<!--将启动基于表达式的语法 -->
	<global-method-security pre-post-annotations="enabled" />

	<!-- 不拦截 -->
	<http pattern="/static/**" security="none" />
	<http pattern="/" security="none" />
	<http pattern="/login" security="none" />
	<http pattern="/timeout" security="none" />
	<http pattern="/logout" security="none" />
	
	<!-- session-fixation-protection -->
	<http auto-config="false" entry-point-ref="casProcessingFilterEntryPoint" servlet-api-provision="true">
		<intercept-url pattern="/main*" access="ROLE_ADMIN" />
<!-- 		<intercept-url pattern="/j_spring_cas_security_check" access="ROLE_ADMIN" /> -->
	    <intercept-url pattern="/**" access="ROLE_USER" />
<!-- 	    <logout logout-success-url="https://sso.demo.com:8443/cas/logout" invalidate-session="true" logout-url="/logout" delete-cookies="JSESSIONID" /> -->
		<custom-filter ref="testFilter" before="FIRST" />
		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<custom-filter ref="casFilter" position="CAS_FILTER" />
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
<!-- 		<anonymous username="guest" granted-authority="ROLE_USER" /> -->
		<session-management session-fixation-protection="migrateSession" invalid-session-url="/expired">
			<concurrency-control session-registry-ref="sessionRegistry" max-sessions="1" error-if-maximum-exceeded="false" expired-url="/castimeout"/>
		</session-management>
	</http>
	
	<beans:bean id="testFilter" class="com.demo.subsystem.common.TestFilter" />
	
	<beans:bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry"/>
					<beans:property name="maximumSessions" value="1" />
					<beans:property name="exceptionIfMaximumExceeded" value="false" />
				</beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"></beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry"/>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>	

	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<user-service id="userService">
		<user name="guest" password="guest" authorities="ROLE_USER, ROLE_ADMIN" />
		<user name="user" password="user" authorities="ROLE_USER, ROLE_ADMIN" />
	</user-service>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>  
	
	<beans:bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="serviceProperties" ref="serviceProperties"/>
	    <beans:property name="authenticationManager" ref="authenticationManager"/>
	    <beans:property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy"/>
	</beans:bean>
	
	<beans:bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
	    <beans:property name="loginUrl" value="https://cas.demo.com:8443/cas/login" />
	    <beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>
	
	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
	    <beans:property name="service" value="http://sso.demo.com:9999/DemoSSO/j_spring_cas_security_check"/>
	    <beans:property name="sendRenew" value="false"/>
	</beans:bean>
	
	<beans:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
	    <beans:property name="userDetailsService" ref="userService" />
	    <beans:property name="serviceProperties" ref="serviceProperties" />
	    <beans:property name="ticketValidator">
	        <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
	            <beans:constructor-arg index="0" value="https://cas.demo.com:8443/cas" />
	        </beans:bean>
	    </beans:property>
	    <beans:property name="key" value="an_id_for_this_auth_provider_only" />
	</beans:bean>
	
<!-- 	<beans:bean id="singleLogoutFilter" class="com.demo.subsystem.common.CustomSingleSignOutFilter" /> -->
	<beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
<!-- 	<beans:bean id="authenticationFilter" class="org.jasig.cas.client.authentication.AuthenticationFilter"></beans:bean> -->

	<beans:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"> 
	    <beans:constructor-arg value="https://cas.demo.com:8443/cas/logout" /> 
	    <beans:constructor-arg> 
	    	<beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/> 
	    </beans:constructor-arg> 
	    <beans:property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
    </beans:bean>
    
</beans:beans>