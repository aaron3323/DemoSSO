<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd ">	
 
	<debug/>
       
	<!--将启动基于表达式的语法 -->
	<global-method-security pre-post-annotations="enabled" />

	<!-- 不拦截 -->
	<http pattern="/static/**" security="none" />
	<http pattern="/" security="none" />
	<http pattern="/login" security="none" />
	<http pattern="/timeout" security="none" />
	
	<!-- 未登录切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">  
		<beans:property name="loginFormUrl" value="/login"></beans:property>  
	</beans:bean>

	<!-- 登陆验证拦截器 -->
	<beans:bean id="loginAuthenticationFilter" class="com.demo.subsystem.authentication.service.impl.LoginAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/landing" />
		<beans:property name="usernameParameter" value="username" />
		<beans:property name="passwordParameter" value="password" />
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/main" />
	</beans:bean>
	<beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?error=true" />
	</beans:bean>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry"/>
					<beans:property name="maximumSessions" value="1" />
					<beans:property name="exceptionIfMaximumExceeded" value="false" />
				</beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"></beans:bean>
				<beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg ref="sessionRegistry"/>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>	
	
	<!-- 安全拦截器 -->
	<beans:bean id="enabledSecurity" class="java.lang.Boolean">
		<beans:constructor-arg type="java.lang.String" value="true" />
	</beans:bean>
	<beans:bean id="defaultAuthorization" class="java.lang.Boolean">
		<beans:constructor-arg type="java.lang.String" value="true" />
	</beans:bean>
	<beans:bean id="securityInterceptor" class="com.demo.subsystem.authentication.service.impl.AuthorizationSecurityInterceptor">
		<beans:property name="accessDecisionManager" ref="authorizationAccessDecisionManager" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="securityMetadataSource" ref="authorizationSecurityMetadataSource" />
	</beans:bean>
	<!-- 访问决策器 -->
	<beans:bean id="authorizationAccessDecisionManager" class="com.demo.subsystem.authentication.service.impl.AuthorizationAccessDecisionManager"></beans:bean>
	<!-- 资源和权限列表 -->
	<beans:bean id="authorizationSecurityMetadataSource" class="com.demo.subsystem.authentication.service.impl.AuthorizationSecurityMetadataSource"></beans:bean>

	<!-- DAO身份验证提供者 -->
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userCache" ref="userCache" />
		<beans:property name="hideUserNotFoundExceptions" value="false" />
		<beans:property name="userDetailsService" ref="authenticationUserDetailsService" />
<!-- 		<beans:property name="passwordEncoder" ref="passwordEncoder" /> -->
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	
	<!-- 缓存 -->
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<beans:property name="configLocation" value="classpath:ehcache.xml"></beans:property>
	</beans:bean>
	<beans:bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<beans:property name="cacheManager" ref="cacheManager"></beans:property>
		<beans:property name="cacheName" value="userCache"></beans:property>
	</beans:bean>
	<beans:bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<beans:property name="cache" ref="userEhCache" />
	</beans:bean>

	<http use-expressions="true" access-denied-page="/denied" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<logout invalidate-session="true" logout-success-url="/login" logout-url="/logout" delete-cookies="JSESSIONID"/>
		<custom-filter ref="loginAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
		<custom-filter ref="securityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		   	
		<session-management invalid-session-url="/timeout">
			<concurrency-control session-registry-ref="sessionRegistry" max-sessions="1" error-if-maximum-exceeded="false" expired-url="/timeout"/>
		</session-management>
	</http>
  
	<!-- 认证管理 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>
	
</beans:beans>