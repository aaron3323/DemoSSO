<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
	version="3.0">
	
  <display-name>DemoSSO</display-name>
  
  <filter>
    <filter-name>Set Character Encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>Set Character Encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

<!-- 	<filter>   -->
<!-- 		<filter-name>TestFilter</filter-name>   -->
<!-- 		<filter-class>com.demo.subsystem.common.TestFilter</filter-class>   -->
<!-- 	</filter> -->
<!-- 	<filter-mapping>   -->
<!-- 		<filter-name>TestFilter</filter-name>   -->
<!-- 		<url-pattern>/*</url-pattern>   -->
<!-- 	</filter-mapping> -->
  
<!-- 	<filter>   -->
<!-- 		<filter-name>CAS Single Sign Out Filter</filter-name>   -->
<!-- 		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>   -->
<!-- 	</filter> -->
<!-- 	<filter-mapping>   -->
<!-- 		<filter-name>CAS Single Sign Out Filter</filter-name>   -->
<!-- 		<url-pattern>/*</url-pattern>   -->
<!-- 	</filter-mapping> -->
  
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	classpath:applicationContext.xml
    	classpath:spring-datasource.xml
		classpath:spring-mybatis.xml
		classpath:spring-security-db.xml
    </param-value>
  </context-param>
  
	<!--
		log4j配置 BEGIN
		如果不定义webAppRootKey参数，那么webAppRootKey就是缺省的"webapp.root"。但最好设置，以免项目之间的名称冲突。
		定义以后，在Web Container启动时将把ROOT的绝对路径写到系统变量里。
		然后log4j的配置文件里就可以用${webName.root }来表示Web目录的绝对路径，把log文件存放于webapp中。
		此参数用于后面的“Log4jConfigListener”
	-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webapp.root</param-value>
	</context-param>
	<!--由Sprng载入的Log4j配置文件位置-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond-->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>600000</param-value>
	</context-param>  
  
  <listener>
    <listener-class>com.demo.subsystem.common.InitializationListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
<!-- 	<listener>   -->
<!-- 		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>   -->
<!-- 	</listener>   -->
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  
  <filter>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HiddenHttpMethodFilter</filter-name>
    <servlet-name>spring</servlet-name>
  </filter-mapping>
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>/static/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-servlet.xml</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
</web-app>